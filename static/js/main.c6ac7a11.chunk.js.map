{"version":3,"sources":["components/Header.js","components/TableBody.js","components/Table.js","utils/API.js","components/SearchBar.js","components/TableArea.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","Component","TableBody","employees","console","log","map","name","first","last","phone","value","id","location","city","country","email","Table","axios","get","SearchBar","handleInputChange","handleFormSubmit","onSubmit","placeholder","onChange","className","role","TableArea","state","filteredUsers","query","handleSort","e","setState","target","preventDefault","filteredUsersList","filter","toLowerCase","includes","API","then","response","data","results","this","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEqBA,E,4JACjB,WACI,OACI,yD,GAHwBC,IAAMC,WC8B3BC,MA9Bf,YAAmC,IAAdC,EAAa,EAAbA,UAEnB,OADAC,QAAQC,IAAI,cAAeF,GAEzB,gCACGA,EAAUG,KACT,YAMO,IAAD,IALJC,KAAQC,EAKJ,EALIA,MAAOC,EAKX,EALWA,KACfC,EAII,EAJJA,MACMC,EAGF,EAHJC,GAAMD,MAGF,IAFJE,SAAYC,EAER,EAFQA,KAAMC,EAEd,EAFcA,QAClBC,EACI,EADJA,MAEA,OACE,+BACE,+BACGR,EADH,IACWC,KAEX,+BACGK,EADH,KACWC,KAEX,6BAAKC,IACL,6BAAKN,MAREC,GAAK,UAAOH,EAAP,YAAgBC,UCE3BQ,MAff,YAA+B,IAAdd,EAAa,EAAbA,UACf,OACE,kCACE,gCACE,+BACE,sCACA,0CACA,+CACA,gDAGJ,cAAC,EAAD,CAAWA,UAAWA,Q,iBCVb,EACF,WACL,OAAOe,IAAMC,IAAI,0CCQVC,MAXf,YAA6D,IAAxCC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,iBACtC,OACE,uBAAMC,SAAUD,EAAhB,UACE,uBAAOE,YAAY,wBAAwBC,SAAUJ,IACrD,wBAAQK,UAAU,kBAAkBC,KAAK,SAAzC,wBCDeC,E,4MAEnBC,MAAQ,CACN1B,UAAW,GACX2B,cAAe,GACfC,MAAO,I,EAITC,WAAa,a,EAabX,kBAAoB,SAACY,GACnB,EAAKC,SAAS,CACZH,MAAOE,EAAEE,OAAOxB,S,EAIpBW,iBAAmB,SAACW,GAClBA,EAAEG,iBAEF,IAAMC,EAAoB,EAAKR,MAAM1B,UAAUmC,QAC7C,YAAuC,IAAD,IAAnC/B,KAAQC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAQO,EAAY,EAAZA,MACxB,QAAIR,EAAM+B,cAAcC,SAAS,EAAKX,MAAME,MAAMQ,mBAGhD9B,EAAK8B,cAAcC,SAAS,EAAKX,MAAME,MAAMQ,kBAI7CvB,EAAMuB,cAAcC,SAAS,EAAKX,MAAME,MAAMQ,mBAQpD,EAAKL,SAAS,CAAEJ,cAAeO,K,uDApCjC,WAAqB,IAAD,OAClBI,IAAcC,MAAK,SAACC,GAClB,EAAKT,SAAS,CACZ/B,UAAWwC,EAASC,KAAKC,QACzBf,cAAea,EAASC,KAAKC,e,oBAqCnC,WACE,OACE,qCACE,cAAC,EAAD,CACExB,kBAAmByB,KAAKzB,kBACxBC,iBAAkBwB,KAAKxB,mBAEzB,qEACA,cAAC,EAAD,CAAOnB,UAAW2C,KAAKjB,MAAMC,uB,GA7DE7B,aCFlB8C,E,4JACnB,WACE,OACE,mCACE,cAAC,EAAD,U,GAJ0B/C,IAAMC,WCUzB+C,MATf,WACE,OACE,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCIOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c6ac7a11.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2>Employee Management</h2>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction TableBody({ employees }) {\r\n  console.log(\"employees: \", employees);\r\n  return (\r\n    <tbody>\r\n      {employees.map(\r\n        ({\r\n          name: { first, last },\r\n          phone,\r\n          id: { value },\r\n          location: { city, country },\r\n          email,\r\n        }) => {\r\n          return (\r\n            <tr key={value || `${first}-${last}`}>\r\n              <td>\r\n                {first} {last}\r\n              </td>\r\n              <td>\r\n                {city}, {country}\r\n              </td>\r\n              <td>{email}</td>\r\n              <td>{phone}</td>\r\n            </tr>\r\n          );\r\n        }\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableBody from \"./TableBody\";\r\nfunction Table({ employees }) {\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Location</th>\r\n          <th>Email Address</th>\r\n          <th>Phone No.</th>\r\n        </tr>\r\n      </thead>\r\n      <TableBody employees={employees} />\r\n    </table>\r\n  );\r\n}\r\nexport default Table;\r\n","import axios from 'axios';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getEmps: function(){\r\n        return axios.get(\"https://randomuser.me/api/?results=30\")\r\n    }\r\n}","import React from \"react\";\r\n\r\nfunction SearchBar({ handleInputChange, handleFormSubmit }) {\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <input placeholder=\"Search For a Employee\" onChange={handleInputChange} />\r\n      <button className=\"btn btn-primary\" role=\"submit\">\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./Table\";\r\nimport API from \"../utils/API\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nexport default class TableArea extends Component {\r\n  //Declare state to hold employees and filtered employees\r\n  state = {\r\n    employees: [],\r\n    filteredUsers: [],\r\n    query: \"\",\r\n  };\r\n\r\n  //handleSort function\r\n  handleSort = () => {};\r\n\r\n  //Function being called which returns the comployees from the API within a componentDidMount\r\n  componentDidMount() {\r\n    API.getEmps().then((response) => {\r\n      this.setState({\r\n        employees: response.data.results,\r\n        filteredUsers: response.data.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  //handleSearch function\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const filteredUsersList = this.state.employees.filter(\r\n      ({ name: { first, last }, email }) => {\r\n        if (first.toLowerCase().includes(this.state.query.toLowerCase())) {\r\n          return true;\r\n        } else if (\r\n          last.toLowerCase().includes(this.state.query.toLowerCase())\r\n        ) {\r\n          return true;\r\n        } else if (\r\n          email.toLowerCase().includes(this.state.query.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n    );\r\n    this.setState({ filteredUsers: filteredUsersList });\r\n  };\r\n  //render two other components:\r\n  //SearchBar - takes a handleSearch function\r\n  //Table - takes the employees and a function called handleSort\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          handleInputChange={this.handleInputChange}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n        />\r\n        <h4>This is where the table etc will be</h4>\r\n        <Table employees={this.state.filteredUsers} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TableArea from \"./TableArea\";\r\n\r\nexport default class Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <TableArea />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}